{
    "details": "<p><i>Nim</i> is a game played with heaps of stones, where two players take it in turn to remove any number of stones from any heap until no stones remain.</p><p>We'll consider the three-heap normal-play version of Nim, which works as follows:<br/>- At the start of the game there are three heaps of stones.<br/>- On his turn the player removes any positive number of stones from any single heap.<br/>- The first player unable to move (because no stones remain) loses.</p><p> If (<var>n</var><sub>1</sub>,<var>n</var><sub>2</sub>,<var>n</var><sub>3</sub>) indicates a Nim position consisting of heaps of size <var>n</var><sub>1</sub>, <var>n</var><sub>2</sub> and <var>n</var><sub>3</sub> then there is a simple function <var>X</var>(<var>n</var><sub>1</sub>,<var>n</var><sub>2</sub>,<var>n</var><sub>3</sub>) \u2014 that you may look up or attempt to deduce for yourself \u2014 that returns:<ul><li>zero if, with perfect strategy, the player about to move will eventually lose; or</li><li>non-zero if, with perfect strategy, the player about to move will eventually win.</li></ul></p><p>For example <var>X</var>(1,2,3) = 0 because, no matter what the current player does, his opponent can respond with a move that leaves two heaps of equal size, at which point every move by the current player can be mirrored by his opponent until no stones remain; so the current player loses. To illustrate:<br/>- current player moves to (1,2,1)<br/>- opponent moves to (1,0,1)<br/>- current player moves to (0,0,1)<br/>- opponent moves to (0,0,0), and so wins.</p><p>For how many positive integers <var>n</var>\u2009<img alt=\"\u2264\" border=\"0\" height=\"12\" src=\"images/symbol_le.gif\" style=\"vertical-align:middle;\" width=\"10\"/>\u20092<sup>30</sup> does <var>X</var>(<var>n</var>,2<var>n</var>,3<var>n</var>) = 0 ?</p>",
    "folder": "nim",
    "level": 1,
    "random": 0.35800341821559134,
    "tags": [],
    "title": "Nim"
}